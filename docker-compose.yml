services:  
  customer:
    build:
      context: .
      dockerfile: ./apps/customer/Dockerfile
      target: development
    command: yarn run start:dev customer
    depends_on:
      - auth
    env_file:
      - ./apps/customer/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3004:3004'

  customer-info-receiver:
    build:
      context: .
      dockerfile: ./apps/customer-info-receiver/Dockerfile
      target: development
    command: yarn run start:dev customer-info-receiver
    depends_on:
      - auth
    env_file:
      - ./apps/customer-info-receiver/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  driver-status-tracker:
    build:
      context: .
      dockerfile: ./apps/driver-status-tracker/Dockerfile
      target: development
    command: yarn run start:dev driver-status-tracker
    depends_on:
      - auth
    env_file:
      - ./apps/driver-status-tracker/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  customer-address-positioning:
    build:
      context: .
      dockerfile: ./apps/customer-address-positioning/Dockerfile
      target: development
    command: yarn run start:dev customer-address-positioning
    depends_on:
      - auth
    env_file:
      - ./apps/customer-address-positioning/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  revenue:
    build:
      context: .
      dockerfile: ./apps/revenue/Dockerfile
      target: development
    command: yarn run start:dev revenue
    depends_on:
      - auth
    env_file:
      - ./apps/revenue/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth:
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: yarn run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
      target: development
    command: yarn run start:dev admin
    env_file:
      - ./apps/admin/.env
    depends_on:
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'
  
  driver:
    build:
      context: .
      dockerfile: ./apps/driver/Dockerfile
      target: development
    command: yarn run start:dev driver
    env_file:
      - ./apps/driver/.env
    depends_on:
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3003:3003'
      
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - /home/toan/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  
  mongodb-primary:
    image: docker.io/bitnami/mongodb:5.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
    ports:
      - '27017:27017'

  mongodb-secondary:
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      
volumes:
  mongodb_master_data:
    driver: local